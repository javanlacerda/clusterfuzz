# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
- name: gcr.io/cloud-builders/git
  entrypoint: bash
  args:
  - -c
  - |
    git config --global credential.helper gcloud.sh
    git clone https://clusterfuzz-config-472119376969-git.us-central1.sourcemanager.dev/clusterfuzz-testing/clusterfuzz-config.git /workspace/clusterfuzz-config
- name: gcr.io/clusterfuzz-images/base
  entrypoint: bash
  args:
  - -c
  - |
    bash ./local/install_deps.bash
    source "$$(python3.11 -m pipenv --venv)/bin/activate"
    mkdir /workspace/zips
    for configpath in /workspace/clusterfuzz-config/configs/*; do
      configbase=$(basename "$configpath")
      echo "Running: CONFIG_DIR_OVERRIDE=$${configpath} python3.11 butler.py package --platform=all"
      CONFIG_DIR_OVERRIDE=$${configpath} python3.11 butler.py package --platform=all
      mkdir /workspace/zips/$${configbase}
      cp -r deployment/* /workspace/zips/$${configbase}/.
      rm -rf deployment/*
    done
- name: gcr.io/clusterfuzz-images/base
  entrypoint: bash
  args:
  - -c
  - |
    sudo apt install git -y
    CLUSTERFUZZ_HASH=$$(git rev-parse --short HEAD)
    CLUSERFUZZ_CONFIG_HASH=$$(git -C /workspace/clusterfuzz-config rev-parse --short HEAD)
    echo "CLUSTERFUZZ_HASH=$${CLUSTERFUZZ_HASH}" >> /workspace/cloudbuild.env
    echo "CLUSERFUZZ_CONFIG_HASH=$${CLUSERFUZZ_CONFIG_HASH}" >> /workspace/cloudbuild.env
    echo "clusterfuzz hash $${CLUSTERFUZZ_HASH}"
    echo "clusterfuzz-config hash $${CLUSERFUZZ_CONFIG_HASH}"
    for project in /workspace/zips/*; do
      projectbase=$(basename $${project})
      for zipfile in $${project}/*; do
        filename=$(basename "$zipfile")
        echo "$${zipfile} and $${filename}"
        echo "Running: gsutil cp $${zipfile} gs://immutable-artifacts/$${CLUSTERFUZZ_HASH}-$${CLUSERFUZZ_CONFIG_HASH}/$${projectbase}/$${filename}"
        gsutil cp $${zipfile} gs://immutable-artifacts/$${CLUSTERFUZZ_HASH}-$${CLUSERFUZZ_CONFIG_HASH}/$${projectbase}/$${filename}
        echo "uploaded.."
      done
    done

- id: build-base-images
  name: gcr.io/cloud-builders/docker
  entrypoint: bash
  args:
  - -c
  - |
    source /workspace/cloudbuild.env
    for project in /workspace/zips/*; do
      projectbase=$(basename $${project})
      CONFIG_PROJECT=projectbase bash build.sh ${_GIT_HASH}
    done
  env:
  - 'IMAGES=
      gcr.io/clusterfuzz-images-immutable/base:base
      gcr.io/clusterfuzz-images-immutable/high-end:high-end'
# - id: build-chrome-images
#   name: gcr.io/cloud-builders/docker
#   entrypoint: bash
#   args:
#   - -c
#   - |
#     source /workspace/cloudbuild.env
#     if [[ -n "$${CHROME_CHANGED}" || -n "$${BASE_CHANGED}" ]]; then
#       echo "CHROME_CHANGED is set to: $${CHROME_CHANGED}"
#       bash build.sh ${_GIT_HASH}
#     else
#         echo "CHROME_CHANGED is empty or not set."
#     fi    
#   env:
#   - 'IMAGES=
#       gcr.io/clusterfuzz-images-immutable/chromium/base:chromium/base
#       gcr.io/clusterfuzz-images-immutable/chromium/builder:chromium/builder
#       gcr.io/clusterfuzz-images-immutable/chromium/high-end:chromium/high-end
#       gcr.io/clusterfuzz-images-immutable/chromium/tester:chromium/tester
#       gcr.io/clusterfuzz-images-immutable/chromium/tests-syncer:chromium/tests-syncer'
# - id: build-oss-fuzz-images
#   name: gcr.io/cloud-builders/docker
#   entrypoint: bash
#   args:
#   - -c
#   - |
#     source /workspace/cloudbuild.env
#     if [[ -n "$${OSS_FUZZ_CHANGED}" || -n "$${BASE_CHANGED}" ]]; then
#       echo "OSS_FUZZ_CHANGED is set to: $${OSS_FUZZ_CHANGED}"
#       bash build.sh ${_GIT_HASH}
#     else
#         echo "OSS_FUZZ_CHANGED is empty or not set."
#     fi    
#   env:
#   - 'IMAGES=
#       gcr.io/clusterfuzz-images-immutable/oss-fuzz/base:oss-fuzz/base
#       gcr.io/clusterfuzz-images-immutable/oss-fuzz/host:oss-fuzz/host
#       gcr.io/clusterfuzz-images-immutable/oss-fuzz/host-high-end:oss-fuzz/host-high-end
#       gcr.io/clusterfuzz-images-immutable/oss-fuzz/worker:oss-fuzz/worker'
# - id: build-ci-images
#   name: gcr.io/cloud-builders/docker
#   entrypoint: bash
#   args:
#   - -c
#   - |
#     source /workspace/cloudbuild.env
#     if [[ -n "$${CI_CHANGED}" || -n "$${BASE_CHANGED}" ]]; then
#       echo "CI_CHANGED is set to: $${CI_CHANGED}"
#       bash build.sh ${_GIT_HASH}
#     else
#         echo "CI_CHANGED is empty or not set."
#     fi    
#   env:
#   - 'IMAGES=
#       gcr.io/clusterfuzz-images-immutable/ci:ci'
# - id: build-workers-images
#   name: gcr.io/cloud-builders/docker
#   entrypoint: bash
#   args:
#   - -c
#   - |
#     source /workspace/cloudbuild.env
#     if [[ -n "$${WORKERS_CHANGED}" || -n "$${BASE_CHANGED}" ]]; then
#       echo "WORKERS_CHANGED is set to: $${WORKERS_CHANGED}"
#       bash build.sh ${_GIT_HASH}
#     else
#         echo "WORKERS_CHANGED is empty or not set."
#     fi    
#   env:
#   - 'IMAGES=
#       gcr.io/clusterfuzz-images-immutable/utask-main-scheduler:utask-main-scheduler
#       gcr.io/clusterfuzz-images-immutable/tworker:tworker'
# - id: build-fuchsia-images
#   name: gcr.io/cloud-builders/docker
#   entrypoint: bash
#   args:
#   - -c
#   - |
#     source /workspace/cloudbuild.env
#     if [[ -n "$${FUCHSIA_CHANGED}" || -n "$${BASE_CHANGED}" ]]; then
#       echo "FUCHSIA_CHANGED is set to: $${FUCHSIA_CHANGED}"
#       bash build.sh ${_GIT_HASH}
#     else
#         echo "FUCHSIA_CHANGED is empty or not set."
#     fi    
#   env:
#   - 'IMAGES=
#       gcr.io/clusterfuzz-images-immutable/fuchsia:fuchsia'
# - id: build-google3-images
#   name: gcr.io/cloud-builders/docker
#   entrypoint: bash
#   args:
#   - -c
#   - |
#     source /workspace/cloudbuild.env
#     if [[ -n "$${GOOGLE_CHANGED}" || -n "$${BASE_CHANGED}" ]]; then
#       echo "GOOGLE_CHANGED is set to: $${GOOGLE_CHANGED}"
#       bash build.sh ${_GIT_HASH}
#     else
#         echo "GOOGLE_CHANGED is empty or not set."
#     fi    
#   env:
#   - 'IMAGES=
#       gcr.io/google.com/cluster-fuzz-immutable/base:google/base
#       gcr.io/google.com/cluster-fuzz-immutable/android-emulator:google/android-emulator
#       gcr.io/google.com/cluster-fuzz-immutable/android-cuttlefish:google/android-cuttlefish'
timeout: 14400s
options:
  machineType: E2_HIGHCPU_32
  diskSizeGb: 500
  logging: CLOUD_LOGGING_ONLY
