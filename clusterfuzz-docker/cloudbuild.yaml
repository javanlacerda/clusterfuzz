# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
- name: gcr.io/cloud-builders/git
  entrypoint: bash
  args:
  - -c
  - |
    git config --global credential.helper gcloud.sh
    git clone https://clusterfuzz-config-472119376969-git.us-central1.sourcemanager.dev/clusterfuzz-testing/clusterfuzz-config.git /workspace/clusterfuzz-config
- name: gcr.io/clusterfuzz-images/base
  entrypoint: bash
  args:
  - -c
  - |
    bash ./local/install_deps.bash
    source "$$(python3.11 -m pipenv --venv)/bin/activate"
    mkdir /workspace/zips
    echo "/zips" >> .gitignore
    for configpath in /workspace/clusterfuzz-config/configs/*; do
      configbase=$(basename "$configpath")
      echo "Running: CONFIG_DIR_OVERRIDE=$${configpath} python3.11 butler.py package --platform=all"
      CONFIG_DIR_OVERRIDE=$${configpath} python3.11 butler.py package --platform=all
      mkdir /workspace/zips/$${configbase}
      cp -r deployment/* /workspace/zips/$${configbase}/.
      rm -rf deployment/*
    done
- name: gcr.io/clusterfuzz-images/base
  entrypoint: bash
  args:
  - -c
  - |
    sudo apt install git -y
    CLUSTERFUZZ_HASH=$$(git rev-parse --short HEAD)
    CLUSERFUZZ_CONFIG_HASH=$$(git -C /workspace/clusterfuzz-config rev-parse --short HEAD)
    echo "clusterfuzz hash $${CLUSTERFUZZ_HASH}"
    echo "clusterfuzz-config hash $${CLUSERFUZZ_CONFIG_HASH}"
    for project in /workspace/zips/*; do
      projectbase=$(basename $${project})
      for zipfile in $${project}/*; do
        filename=$(basename "$zipfile")
        echo "$${zipfile} and $${filename}"
        echo "Running: gsutil cp $${zipfile} gs://immutable-artifacts/$${CLUSTERFUZZ_HASH}-$${CLUSERFUZZ_CONFIG_HASH}/$${projectbase}/$${filename}"
        gsutil cp $${zipfile} gs://immutable-artifacts/$${CLUSTERFUZZ_HASH}-$${CLUSERFUZZ_CONFIG_HASH}/$${projectbase}/$${filename}
        echo "uploaded.."
      done
    done
    
timeout: 14400s
options:
  machineType: E2_HIGHCPU_32
  diskSizeGb: 500
  logging: CLOUD_LOGGING_ONLY
